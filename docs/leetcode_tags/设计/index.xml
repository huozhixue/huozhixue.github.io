<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>设计 - 力扣标签 - 个人博客</title>
        <link>https://huozhixue.github.io/leetcode_tags/%E8%AE%BE%E8%AE%A1/</link>
        <description>设计 - 力扣标签 - 个人博客</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 04 Sep 2021 22:50:00 &#43;0800</lastBuildDate><atom:link href="https://huozhixue.github.io/leetcode_tags/%E8%AE%BE%E8%AE%A1/" rel="self" type="application/rss+xml" /><item>
    <title>1993：树上的操作（★★）</title>
    <link>https://huozhixue.github.io/leetcode/1993/</link>
    <pubDate>Sat, 04 Sep 2021 22:50:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/leetcode/1993/</guid>
    <description><![CDATA[力扣第 60 场双周赛第 3 题 题目 给你一棵 n 个节点的树，编号从 0 到 n - 1 ，以父节点数组 parent 的形式给出，其中 parent[i] 是第 i 个节点的父节点。树的根节点为 0 号节点]]></description>
</item><item>
    <title>1845：座位预约管理系统（★）</title>
    <link>https://huozhixue.github.io/leetcode/1845/</link>
    <pubDate>Sat, 01 May 2021 22:40:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/leetcode/1845/</guid>
    <description><![CDATA[力扣第 51 场双周赛第 2 题 题目 请你设计一个管理 n 个座位预约的系统，座位编号从 1 到 n 。 请你实现 SeatManager 类： SeatManager(int n) 初始化一个 SeatManager 对象，它管理从 1 到 n 编号的 n 个]]></description>
</item><item>
    <title>1825：求出 MK 平均值（★★★）</title>
    <link>https://huozhixue.github.io/leetcode/1825/</link>
    <pubDate>Sun, 11 Apr 2021 11:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/leetcode/1825/</guid>
    <description><![CDATA[力扣第 236 场周赛第 4 题 题目 给你两个整数 m 和 k ，以及数据流形式的若干整数。你需要实现一个数据结构，计算这个数据流的 MK 平均值 。 MK 平均值 按照如下步骤]]></description>
</item><item>
    <title>1381：设计一个支持增量操作的栈（★）</title>
    <link>https://huozhixue.github.io/leetcode/1381/</link>
    <pubDate>Sun, 15 Mar 2020 10:40:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/leetcode/1381/</guid>
    <description><![CDATA[力扣第 180 场周赛第 2 题 题目 请你设计一个支持对其元素进行增量操作的栈。 实现自定义栈类 CustomStack ： CustomStack(int maxSize)：用 maxSize 初始化对象，maxSize 是栈中]]></description>
</item><item>
    <title>1172：餐盘栈（★★★）</title>
    <link>https://huozhixue.github.io/leetcode/1172/</link>
    <pubDate>Sun, 25 Aug 2019 11:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/leetcode/1172/</guid>
    <description><![CDATA[力扣第 151 场周赛第 4 题 题目 我们把无限数量 &infin; 的栈排成一行，按从左到右的次序从 0 开始编号。每个栈的的最大容量 capacity 都相同。 实现一个叫「餐盘」的类 Din]]></description>
</item><item>
    <title>0933：最近的请求次数</title>
    <link>https://huozhixue.github.io/leetcode/0933/</link>
    <pubDate>Sun, 04 Nov 2018 09:30:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/leetcode/0933/</guid>
    <description><![CDATA[力扣第 109 场周赛第 1 题 题目 写一个 RecentCounter 类来计算特定时间范围内最近的请求。 请你实现 RecentCounter 类： RecentCounter() 初始化计数器，请求数为 0 。 int ping(int t) 在时间 t 添加一个新请求，其]]></description>
</item><item>
    <title>0901：股票价格跨度（★）</title>
    <link>https://huozhixue.github.io/leetcode/0901/</link>
    <pubDate>Sun, 09 Sep 2018 09:40:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/leetcode/0901/</guid>
    <description><![CDATA[力扣第 101 场周赛第 2 题 题目 设计一个算法收集某些股票的每日报价，并返回该股票当日价格的 跨度 。 当日股票价格的 跨度 被定义为股票价格小于或等于今天价格]]></description>
</item><item>
    <title>0895：最大频率栈（★★）</title>
    <link>https://huozhixue.github.io/leetcode/0895/</link>
    <pubDate>Sun, 26 Aug 2018 10:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/leetcode/0895/</guid>
    <description><![CDATA[力扣第 99 场周赛第 4 题 题目 设计一个类似堆栈的数据结构，将元素推入堆栈，并从堆栈中弹出出现频率最高的元素。 实现 FreqStack 类: FreqStack() 构造一个空的堆栈。 void push(int val) 将]]></description>
</item><item>
    <title>1206：设计跳表（★★）</title>
    <link>https://huozhixue.github.io/leetcode/1206/</link>
    <pubDate>Fri, 20 Apr 2018 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/leetcode/1206/</guid>
    <description><![CDATA[力扣第 1206 题 题目 不使用任何库函数，设计一个 跳表 。 跳表 是在 O(log(n)) 时间内完成增加、删除、搜索操作的数据结构。跳表相比于树堆与红黑树，其功能与性能相当，]]></description>
</item><item>
    <title>0707：设计链表（★）</title>
    <link>https://huozhixue.github.io/leetcode/0707/</link>
    <pubDate>Wed, 07 Dec 2016 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/leetcode/0707/</guid>
    <description><![CDATA[力扣第 707 题 题目 你可以选择使用单链表或者双链表，设计并实现自己的链表。 单链表中的节点应该具备两个属性：val 和 next 。val 是当前节点的值，nex]]></description>
</item></channel>
</rss>
