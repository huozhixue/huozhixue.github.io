<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>双向链表 - 力扣标签 - 个人博客</title>
        <link>https://huozhixue.github.io/leetcode_tags/%E5%8F%8C%E5%90%91%E9%93%BE%E8%A1%A8/</link>
        <description>双向链表 - 力扣标签 - 个人博客</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 04 Aug 2024 10:50:00 &#43;0800</lastBuildDate><atom:link href="https://huozhixue.github.io/leetcode_tags/%E5%8F%8C%E5%90%91%E9%93%BE%E8%A1%A8/" rel="self" type="application/rss+xml" /><item>
    <title>3244：新增道路查询后的最短距离 II（2270 分）</title>
    <link>https://huozhixue.github.io/leetcode/3244/</link>
    <pubDate>Sun, 04 Aug 2024 10:50:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/leetcode/3244/</guid>
    <description><![CDATA[力扣第 409 场周赛第 3 题 题目 给你一个整数 n 和一个二维整数数组 queries。 有 n 个城市，编号从 0 到 n - 1。初始时，每个城市 i 都有一条单向道路通往]]></description>
</item><item>
    <title>1472：设计浏览器历史记录（1453 分）</title>
    <link>https://huozhixue.github.io/leetcode/1472/</link>
    <pubDate>Sun, 07 Jun 2020 10:50:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/leetcode/1472/</guid>
    <description><![CDATA[力扣第 192 场周赛第 3 题 题目 你有一个只支持单个标签页的 浏览器 ，最开始你浏览的网页是 homepage ，你可以访问其他的网站 url ，也可以在浏览历史中后退 steps 步或前进 steps]]></description>
</item><item>
    <title>1388：3n 块披萨（2409 分）</title>
    <link>https://huozhixue.github.io/leetcode/1388/</link>
    <pubDate>Sat, 21 Mar 2020 23:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/leetcode/1388/</guid>
    <description><![CDATA[力扣第 22 场双周赛第 4 题 题目 给你一个披萨，它由 3n 块不同大小的部分组成，现在你和你的朋友们需要按照如下规则来分披萨： 你挑选 任意 一块披萨。 Alice 将会挑]]></description>
</item><item>
    <title>0460：LFU 缓存（★★）</title>
    <link>https://huozhixue.github.io/leetcode/0460/</link>
    <pubDate>Mon, 04 Apr 2016 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/leetcode/0460/</guid>
    <description><![CDATA[力扣第 460 题 题目 请你为 最不经常使用（LFU）缓存算法设计并实现数据结构。 实现 LFUCache 类： LFUCache(int capacity) - 用数据结构的容量 capacity 初始化对象 int get(int key) - 如果键 key 存在于缓存]]></description>
</item><item>
    <title>0432：全 O(1) 的数据结构（★★）</title>
    <link>https://huozhixue.github.io/leetcode/0432/</link>
    <pubDate>Mon, 07 Mar 2016 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/leetcode/0432/</guid>
    <description><![CDATA[力扣第 432 题 题目 请你设计一个用于存储字符串计数的数据结构，并能够返回计数最小和最大的字符串。 实现 AllOne 类： AllOne() 初始化数据结构的对象。 inc(String key) 字符串 key 的计]]></description>
</item><item>
    <title>0430：扁平化多级双向链表（★）</title>
    <link>https://huozhixue.github.io/leetcode/0430/</link>
    <pubDate>Sat, 05 Mar 2016 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/leetcode/0430/</guid>
    <description><![CDATA[力扣第 430 题 题目 你会得到一个双链表，其中包含的节点有一个下一个指针、一个前一个指针和一个额外的 子指针 。这个子指针可能指向一个单独的双向链表，也]]></description>
</item><item>
    <title>0426：将二叉搜索树转化为排序的双向链表（★）</title>
    <link>https://huozhixue.github.io/leetcode/0426/</link>
    <pubDate>Tue, 01 Mar 2016 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/leetcode/0426/</guid>
    <description><![CDATA[力扣第 426 题 题目 将一个 二叉搜索树 就地转化为一个 已排序的双向循环链表 。 对于双向循环列表，你可以将左右孩子指针作为双向循环链表的前驱和后继指针，第]]></description>
</item><item>
    <title>0188：买卖股票的最佳时机 IV（★★）</title>
    <link>https://huozhixue.github.io/leetcode/0188/</link>
    <pubDate>Tue, 07 Jul 2015 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/leetcode/0188/</guid>
    <description><![CDATA[力扣第 188 题 题目 给你一个整数数组 prices 和一个整数 k ，其中 prices[i] 是某支给定的股票在第 i 天的价格。 设计一个算法来计算你所能获取的最大利润。你最多可以完成 k]]></description>
</item><item>
    <title>0146：LRU 缓存（★）</title>
    <link>https://huozhixue.github.io/leetcode/0146/</link>
    <pubDate>Tue, 26 May 2015 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/leetcode/0146/</guid>
    <description><![CDATA[力扣第 146 题 题目 请你设计并实现一个满足 LRU (最近最少使用) 缓存 约束的数据结构。 实现 LRUCache 类： LRUCache(int capacity) 以 正整数 作为容量 capacity 初始化 LRU 缓存 int get(int key) 如果关键字 key 存在]]></description>
</item></channel>
</rss>
