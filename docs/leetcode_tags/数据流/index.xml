<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>数据流 - 力扣标签 - 个人博客</title>
        <link>https://huozhixue.github.io/leetcode_tags/%E6%95%B0%E6%8D%AE%E6%B5%81/</link>
        <description>数据流 - 力扣标签 - 个人博客</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 11 Apr 2021 11:00:00 &#43;0800</lastBuildDate><atom:link href="https://huozhixue.github.io/leetcode_tags/%E6%95%B0%E6%8D%AE%E6%B5%81/" rel="self" type="application/rss+xml" /><item>
    <title>1825：求出 MK 平均值（2395 分）</title>
    <link>https://huozhixue.github.io/leetcode/1825/</link>
    <pubDate>Sun, 11 Apr 2021 11:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/leetcode/1825/</guid>
    <description><![CDATA[力扣第 236 场周赛第 4 题 题目 给你两个整数 m 和 k ，以及数据流形式的若干整数。你需要实现一个数据结构，计算这个数据流的 MK 平均值 。 MK 平均值 按照如下步骤]]></description>
</item><item>
    <title>1472：设计浏览器历史记录（1453 分）</title>
    <link>https://huozhixue.github.io/leetcode/1472/</link>
    <pubDate>Sun, 07 Jun 2020 10:50:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/leetcode/1472/</guid>
    <description><![CDATA[力扣第 192 场周赛第 3 题 题目 你有一个只支持单个标签页的 浏览器 ，最开始你浏览的网页是 homepage ，你可以访问其他的网站 url ，也可以在浏览历史中后退 steps 步或前进 steps]]></description>
</item><item>
    <title>1032：字符流（1970 分）</title>
    <link>https://huozhixue.github.io/leetcode/1032/</link>
    <pubDate>Sun, 21 Apr 2019 11:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/leetcode/1032/</guid>
    <description><![CDATA[力扣第 133 场周赛第 4 题 题目 设计一个算法：接收一个字符流，并检查这些字符的后缀是否是字符串数组 words 中的一个字符串。 例如，words = ["abc", "xyz"] 且字符流中]]></description>
</item><item>
    <title>0933：最近的请求次数（1337 分）</title>
    <link>https://huozhixue.github.io/leetcode/0933/</link>
    <pubDate>Sun, 04 Nov 2018 09:30:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/leetcode/0933/</guid>
    <description><![CDATA[力扣第 109 场周赛第 1 题 题目 写一个 RecentCounter 类来计算特定时间范围内最近的请求。 请你实现 RecentCounter 类： RecentCounter() 初始化计数器，请求数为 0 。 int ping(int t) 在时间 t 添加一个新请求，其]]></description>
</item><item>
    <title>0901：股票价格跨度（1708 分）</title>
    <link>https://huozhixue.github.io/leetcode/0901/</link>
    <pubDate>Sun, 09 Sep 2018 09:40:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/leetcode/0901/</guid>
    <description><![CDATA[力扣第 101 场周赛第 2 题 题目 设计一个算法收集某些股票的每日报价，并返回该股票当日价格的 跨度 。 当日股票价格的 跨度 被定义为股票价格小于或等于今天价格]]></description>
</item><item>
    <title>0703：数据流中的第 K 大元素</title>
    <link>https://huozhixue.github.io/leetcode/0703/</link>
    <pubDate>Sat, 03 Dec 2016 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/leetcode/0703/</guid>
    <description><![CDATA[力扣第 703 题 题目 设计一个找到数据流中第 k 大元素的类（class）。注意是排序后的第 k 大元素，不是第 k 个不同的元素。 请实现 KthLargest 类： KthLargest(int k, int[] nums) 使用整数]]></description>
</item><item>
    <title>0346：数据流中的移动平均值</title>
    <link>https://huozhixue.github.io/leetcode/0346/</link>
    <pubDate>Sat, 12 Dec 2015 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/leetcode/0346/</guid>
    <description><![CDATA[力扣第 346 题 题目 给定一个整数数据流和一个窗口大小，根据该滑动窗口的大小，计算其所有整数的移动平均值。 实现 MovingAverage 类： MovingAverage(int size) 用窗口大小 size 初始化对象。 double next(int]]></description>
</item><item>
    <title>0295：数据流的中位数（★★）</title>
    <link>https://huozhixue.github.io/leetcode/0295/</link>
    <pubDate>Thu, 22 Oct 2015 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/leetcode/0295/</guid>
    <description><![CDATA[力扣第 295 题 题目 中位数是有序整数列表中的中间值。如果列表的大小是偶数，则没有中间值，中位数是两个中间值的平均值。 例如 arr = [2,3,4] 的中位数是 3 。 例如 arr]]></description>
</item><item>
    <title>0170：两数之和 III - 数据结构设计</title>
    <link>https://huozhixue.github.io/leetcode/0170/</link>
    <pubDate>Fri, 19 Jun 2015 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/leetcode/0170/</guid>
    <description><![CDATA[力扣第 170 题 题目 设计一个接收整数流的数据结构，该数据结构支持检查是否存在两数之和等于特定值。 实现 TwoSum 类： TwoSum() 使用空数组初始化 TwoSum 对象 void add(int number) 向数据结构]]></description>
</item></channel>
</rss>
