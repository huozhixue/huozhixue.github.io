<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>个人博客</title>
        <link>https://huozhixue.github.io/</link>
        <description>Ian 的博客</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 09 Sep 2025 00:00:00 &#43;0800</lastBuildDate>
            <atom:link href="https://huozhixue.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>数据结构（九）：线段树</title>
    <link>https://huozhixue.github.io/ds-segtree/</link>
    <pubDate>Wed, 19 Jan 2022 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/ds-segtree/</guid>
    <description><![CDATA[算法学习笔记(14): 线段树 线段树（Segment Tree）是一种二叉树形数据结构，支持区间修改和区间查询。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16]]></description>
</item><item>
    <title>数据结构（八）：树状数组</title>
    <link>https://huozhixue.github.io/ds-fenwick/</link>
    <pubDate>Mon, 17 Jan 2022 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/ds-fenwick/</guid>
    <description><![CDATA[算法学习笔记(2) : 树状数组 树状数组或二叉索引树（Binary Indexed Tree），又以其发明者命名为 Fenwick 树，支持单点修改和区间查询 1 2 3 4 5 6 7 8 9]]></description>
</item><item>
    <title>数据结构（七）：并查集</title>
    <link>https://huozhixue.github.io/ds-union_find/</link>
    <pubDate>Sat, 15 Jan 2022 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/ds-union_find/</guid>
    <description><![CDATA[并查集（Union Find）也叫「不相交集合（Disjoint Set）」，是一种树型的数据结构，专门用于 动态处理 不相交集合的「查询」与「合并]]></description>
</item><item>
    <title>数据结构（六）：有序集合</title>
    <link>https://huozhixue.github.io/ds-ordered_set/</link>
    <pubDate>Thu, 13 Jan 2022 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/ds-ordered_set/</guid>
    <description><![CDATA[很多问题需要维护一个有序的集合，根据操作不同，可以选择更优的数据结构 访问 搜索 插入 删除 访问最值 插入最值 删除最值 数组 list O(1) O(logN) O(N) O(N) O(1) O(1) O(1) 队列 deque O(N) O(N) O(N)]]></description>
</item><item>
    <title>数据结构（五）：图</title>
    <link>https://huozhixue.github.io/ds-graph/</link>
    <pubDate>Tue, 11 Jan 2022 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/ds-graph/</guid>
    <description><![CDATA[拓扑排序 0207 课程表 0210 课程表 II 0684 冗余连接 0310 最小高度树 0802 找到最终的安全状态 2115 从给定原材料中找到所有可以做出的菜 1203 项目管理 1591 奇怪的打印机 II 1857 有向图中]]></description>
</item><item>
    <title>数据结构（四）：树</title>
    <link>https://huozhixue.github.io/ds-tree/</link>
    <pubDate>Sun, 09 Jan 2022 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/ds-tree/</guid>
    <description><![CDATA[树哈希 0297 二叉树的序列化与反序列化 0449 序列化和反序列化二叉搜索树 0572 另一个树的子树 0652 寻找重复的子树 lca 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23]]></description>
</item><item>
    <title>数据结构（三）：栈与队列</title>
    <link>https://huozhixue.github.io/ds-stack/</link>
    <pubDate>Fri, 07 Jan 2022 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/ds-stack/</guid>
    <description><![CDATA[栈 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 # 计算器 def cal(s: str) -&gt; int: func = {&#39;+&#39;:int.__add__,&#39;-&#39;:int.__sub__,&#39;*&#39;:int.__mul__,&#39;/&#39;:lambda x,y:x//y} pro = dict(zip(&#39;+-*/(&#39;,&#39;11223&#39;)) sk,ops = [],[] for x,op in re.findall(&#39;(\d+)|([-+*/()])&#39;,s+&#39;+&#39;): if x: sk.append(int(x)) elif op==&#39;(&#39;: ops.append(op) elif op==&#39;)&#39;: while ops[-1] != &#39;(&#39;: b,a = sk.pop(),sk.pop() sk.append(func[ops.pop()](a,b)) ops.pop() else: while ops and pro[ops[-1]]&lt;=pro[op]: b,a = sk.pop(),sk.pop()]]></description>
</item><item>
    <title>数据结构（二）：字符串</title>
    <link>https://huozhixue.github.io/ds-string/</link>
    <pubDate>Wed, 05 Jan 2022 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/ds-string/</guid>
    <description><![CDATA[最小表示法 最小表示法 1 2 3 4 5 6 7 8 9 10 11 12 def minimal(s): n = len(s) i,j,a = 0,1,0 while i&lt;n and j&lt;n and a&lt;n: x,y = s[(i+a)%n],s[(j+a)%n] if x==y: a += 1 elif x&gt;y: i,j,a = j,max(i+a,j)+1,0 else: j,a = j+a+1,0 return s[i:]+s[:i] 字符串匹配 前缀函数与 KMP 算法 Manacher Z]]></description>
</item><item>
    <title>数据结构（一）：链表</title>
    <link>https://huozhixue.github.io/ds-linked/</link>
    <pubDate>Mon, 03 Jan 2022 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/ds-linked/</guid>
    <description><![CDATA[1 2 3 4 5 6 7 8 9 # 反转链表 def reverse(head): tail = head while tail and tail.next: tmp = tail.next tail.next = tmp.next tmp.next = head head = tmp return head 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 # 双向链表 class Node: # 提高访问]]></description>
</item><item>
    <title>数据结构（零）：基础</title>
    <link>https://huozhixue.github.io/ds-basic/</link>
    <pubDate>Sat, 01 Jan 2022 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/ds-basic/</guid>
    <description><![CDATA[#1 链表与数组 链表和数组是最基本的数据结构，是其他数据结构的基础 数组和链表的区别 数组和链表都是线性数据结构，区别在于数组具有索引，数组中的元素]]></description>
</item><item>
    <title>算法（八）：根号思想</title>
    <link>https://huozhixue.github.io/algo-sqrt/</link>
    <pubDate>Wed, 13 Jan 2021 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/algo-sqrt/</guid>
    <description><![CDATA[根号分治 根号限制 总和为 n 的若干个数，最多只有 $\sqrt n$ 种 将边的方向定为从度数小的点连向度数大的点（度数相等可以比较标号），边的出度最多 $O(\sqrt m)$ 分块思想]]></description>
</item><item>
    <title>算法（九）：技巧</title>
    <link>https://huozhixue.github.io/algo-trick/</link>
    <pubDate>Wed, 13 Jan 2021 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/algo-trick/</guid>
    <description><![CDATA[增量 遍历统计时考虑只计算增量，节省时间 1830 使字符串有序的最少操作次数 （2620分） 2484 统计回文子序列数目 3395 唯一中间众数子序列 I log trick]]></description>
</item><item>
    <title>算法（七）：几何</title>
    <link>https://huozhixue.github.io/algo-math_geometry/</link>
    <pubDate>Mon, 11 Jan 2021 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/algo-math_geometry/</guid>
    <description><![CDATA[向量 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 from math import atan2 def dot(u,v): # u·v，点乘（内积） return u[0]*v[0]+u[1]*v[1] def]]></description>
</item><item>
    <title>算法（六）：代数</title>
    <link>https://huozhixue.github.io/algo-math_algebra/</link>
    <pubDate>Sat, 09 Jan 2021 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/algo-math_algebra/</guid>
    <description><![CDATA[代数 1130 翻转子数组得到最大的数组值 （2482分） 组合 1 2 3 4 5 6 7 8 9 10 11 12 13 14 # 下一个排列 def nxt(A): n = len(A) i = n-2 while i &gt;= 0 and A[i] &gt;= A[i+1]: i -= 1 if i &lt; 0: return []]]></description>
</item><item>
    <title>算法（五）：贪心与构造</title>
    <link>https://huozhixue.github.io/algo-greedy/</link>
    <pubDate>Thu, 07 Jan 2021 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/algo-greedy/</guid>
    <description><![CDATA[偏序 0342 摆动排序 II 间隔 0621 任务调度器]]></description>
</item><item>
    <title>算法（四）：动态规划</title>
    <link>https://huozhixue.github.io/algo-dp/</link>
    <pubDate>Wed, 06 Jan 2021 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/algo-dp/</guid>
    <description><![CDATA[排列 dp 0903 DI 序列的有效排列 数位 dp 1 2 3 4 5 6 7 8 9 10 11 @cache def dfs(i,st,bd): if i==len(s): return st res = 0 cur = int(s[i]) up = cur if bd else 9 for x in range(up+1): res += dfs(i+1,st+(x==1),bd and x==cur) return res s = str(n) 0233 数字 1 的个数 0600 不含]]></description>
</item><item>
    <title>算法（三）：分治</title>
    <link>https://huozhixue.github.io/algo-divide/</link>
    <pubDate>Tue, 05 Jan 2021 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/algo-divide/</guid>
    <description><![CDATA[cdq 分治]]></description>
</item><item>
    <title>算法（二）：二分与倍增</title>
    <link>https://huozhixue.github.io/algo-binary/</link>
    <pubDate>Mon, 04 Jan 2021 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/algo-binary/</guid>
    <description><![CDATA[统计二分 3261 统计满足 K 约束的子字符串数量 II （2659 分） 答案二分 倍增 1 2 3 4 5 6 7 8 9 10 11 12 13 14 class ST: def __init__(self,A,func=max): f = A[:] self.st = st = [f] j, N = 1, len(f) while 2*j&lt;=N: f = [func(f[i],f[i+j]) for]]></description>
</item><item>
    <title>算法（一）：位运算</title>
    <link>https://huozhixue.github.io/algo-bit/</link>
    <pubDate>Sun, 03 Jan 2021 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/algo-bit/</guid>
    <description><![CDATA[子集 算法学习笔记(75): Gosper&rsquo;s Hack 1 2 3 4 y = st # 生成所有子集 while y: # 处理子集 y y = (y-1)&amp;st 1 2 3 4 5 6 7 8 st,ma = (1&lt;&lt;k)-1, 1&lt;&lt;n # 生成所有 k 元子集 while st&lt;ma: # 处理子集 st lb]]></description>
</item><item>
    <title>算法（零）：基础</title>
    <link>https://huozhixue.github.io/algo-basic/</link>
    <pubDate>Fri, 01 Jan 2021 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/algo-basic/</guid>
    <description><![CDATA[#1 位运算与进位制 位运算是计算机最基础的运算，包括位模式或二进制数的一元和二元操作（&amp;、|、^、~、&laquo;、&raquo;） 很]]></description>
</item></channel>
</rss>
