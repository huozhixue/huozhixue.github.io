<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>算法 - 标签 - 个人博客</title>
        <link>https://huozhixue.github.io/tags/%E7%AE%97%E6%B3%95/</link>
        <description>算法 - 标签 - 个人博客</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 01 Jan 2025 00:00:00 &#43;0800</lastBuildDate><atom:link href="https://huozhixue.github.io/tags/%E7%AE%97%E6%B3%95/" rel="self" type="application/rss+xml" /><item>
    <title>网络流入门</title>
    <link>https://huozhixue.github.io/graph-flow/</link>
    <pubDate>Wed, 01 Jan 2025 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/graph-flow/</guid>
    <description><![CDATA[最大流 FF 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 # FF 最大流 class MF: def __init__(self,N): self.g = [[] for _ in range(N)] self.vis = [0]*N self.N = N def add(self,u,v,c): self.g[u].append([v,len(self.g[v]),c]) self.g[v].append([u,len(self.g[u])-1,0]) def dfs(self,u,t,flow): g = self.g if u==t: return]]></description>
</item><item>
    <title>算法（八）：技巧</title>
    <link>https://huozhixue.github.io/algo-trick/</link>
    <pubDate>Wed, 13 Jan 2021 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/algo-trick/</guid>
    <description><![CDATA[根号 根号分治 根号限制 总和为 n 的若干个数，最多只有 $\sqrt n$ 种 将边的方向定为从度数小的点连向度数大的点（度数相等可以比较标号），边的出度最多 $O(\sqrt m)$ 分块]]></description>
</item><item>
    <title>算法（七）：几何</title>
    <link>https://huozhixue.github.io/algo-math_geometry/</link>
    <pubDate>Mon, 11 Jan 2021 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/algo-math_geometry/</guid>
    <description><![CDATA[向量 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 from math import atan2 def dot(u,v): # u·v，点乘（内积） return u[0]*v[0]+u[1]*v[1] def]]></description>
</item><item>
    <title>算法（六）：代数</title>
    <link>https://huozhixue.github.io/algo-math_algebra/</link>
    <pubDate>Sat, 09 Jan 2021 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/algo-math_algebra/</guid>
    <description><![CDATA[代数 1130 翻转子数组得到最大的数组值 （2482分） 组合 1 2 3 4 5 6 7 8 9 10 11 12 13 14 # 下一个排列 def nxt(A): n = len(A) i = n-2 while i &gt;= 0 and A[i] &gt;= A[i+1]: i -= 1 if i &lt; 0: return []]]></description>
</item><item>
    <title>算法（五）：贪心与构造</title>
    <link>https://huozhixue.github.io/algo-greedy/</link>
    <pubDate>Thu, 07 Jan 2021 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/algo-greedy/</guid>
    <description><![CDATA[偏序 0342 摆动排序 II 间隔 0621 任务调度器]]></description>
</item><item>
    <title>算法（四）：动态规划</title>
    <link>https://huozhixue.github.io/algo-dp/</link>
    <pubDate>Wed, 06 Jan 2021 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/algo-dp/</guid>
    <description><![CDATA[排列 dp 0903 DI 序列的有效排列 数位 dp 1 2 3 4 5 6 7 8 9 10 11 @cache def dfs(i,st,bd): if i==len(s): return st res = 0 cur = int(s[i]) up = cur if bd else 9 for x in range(up+1): res += dfs(i+1,st+(x==1),bd and x==cur) return res s = str(n) 0233 数字 1 的个数 0600 不含]]></description>
</item><item>
    <title>算法（三）：分治</title>
    <link>https://huozhixue.github.io/algo-divide/</link>
    <pubDate>Tue, 05 Jan 2021 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/algo-divide/</guid>
    <description><![CDATA[cdq 分治]]></description>
</item><item>
    <title>算法（二）：二分与倍增</title>
    <link>https://huozhixue.github.io/algo-binary/</link>
    <pubDate>Mon, 04 Jan 2021 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/algo-binary/</guid>
    <description><![CDATA[统计二分 3261 统计满足 K 约束的子字符串数量 II （2659 分） 答案二分 倍增]]></description>
</item><item>
    <title>算法（一）：位运算</title>
    <link>https://huozhixue.github.io/algo-bit/</link>
    <pubDate>Sun, 03 Jan 2021 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/algo-bit/</guid>
    <description><![CDATA[子集 算法学习笔记(75): Gosper&rsquo;s Hack 1 2 3 4 y = st # 生成所有子集 while y: # 处理子集 y y = (y-1)&amp;st 1 2 3 4 5 6 7 8 st,ma = (1&lt;&lt;k)-1, 1&lt;&lt;n # 生成所有 k 元子集 while st&lt;ma: # 处理子集 st lb]]></description>
</item><item>
    <title>算法（零）：基础</title>
    <link>https://huozhixue.github.io/algo-basic/</link>
    <pubDate>Fri, 01 Jan 2021 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/algo-basic/</guid>
    <description><![CDATA[#1 位运算与进位制 位运算是计算机最基础的运算，包括位模式或二进制数的一元和二元操作（&amp;、|、^、~、&laquo;、&raquo;） 很]]></description>
</item></channel>
</rss>
