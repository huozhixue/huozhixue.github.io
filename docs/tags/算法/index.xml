<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>算法 - 标签 - 个人博客</title>
        <link>https://huozhixue.github.io/tags/%E7%AE%97%E6%B3%95/</link>
        <description>算法 - 标签 - 个人博客</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 01 Jan 2025 00:00:00 &#43;0800</lastBuildDate><atom:link href="https://huozhixue.github.io/tags/%E7%AE%97%E6%B3%95/" rel="self" type="application/rss+xml" /><item>
    <title>算法模板</title>
    <link>https://huozhixue.github.io/template/</link>
    <pubDate>Wed, 01 Jan 2025 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/template/</guid>
    <description><![CDATA[1 字符串 字符串匹配：kmp、mancher、z函数、滚动哈希 最小表示法 字典树 AC自动机 后缀数组 2 常用数据结构 常用数据结构：位运算、链表、栈、]]></description>
</item><item>
    <title>dp模板：dp 优化</title>
    <link>https://huozhixue.github.io/template-dp_opt/</link>
    <pubDate>Wed, 03 May 2023 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/template-dp_opt/</guid>
    <description><![CDATA[wqs 二分 斜率优化 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 def dot(u,v): # u·v，点乘（内积） return u[0]*v[0]+u[1]*v[1] def cross(u,v): # u X v，叉乘（外积），逆正顺负 return u[0]*v[1]-u[1]*v[0] def convex(A,sgn=1): # 离线生]]></description>
</item><item>
    <title>dp模板：插头 dp</title>
    <link>https://huozhixue.github.io/template-dp_plug/</link>
    <pubDate>Tue, 02 May 2023 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/template-dp_plug/</guid>
    <description><![CDATA[插头 dp]]></description>
</item><item>
    <title>dp模板：数位 dp</title>
    <link>https://huozhixue.github.io/template-dp_number/</link>
    <pubDate>Mon, 01 May 2023 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/template-dp_number/</guid>
    <description><![CDATA[数位 dp 1 2 3 4 5 6 7 8 9 10 11 @cache def dfs(i,st,bd): if i==len(s): return st res = 0 cur = int(s[i]) up = cur if bd else 9 for x in range(up+1): res += dfs(i+1,st+(x==1),bd and x==cur) return res s = str(n)]]></description>
</item><item>
    <title>数学模板：计算几何</title>
    <link>https://huozhixue.github.io/template-math_geom/</link>
    <pubDate>Wed, 05 Apr 2023 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/template-math_geom/</guid>
    <description><![CDATA[向量 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 from math import atan2 def dot(u,v): # u·v，点乘（内积） return u[0]*v[0]+u[1]*v[1] def]]></description>
</item><item>
    <title>数学模板：随机化</title>
    <link>https://huozhixue.github.io/template-math_rand/</link>
    <pubDate>Tue, 04 Apr 2023 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/template-math_rand/</guid>
    <description><![CDATA[爬山法 1 2 3 4 5 6 7 8 9 10 11 def climb(p,cal): eps, step = 1e-7, 1 while step &gt; eps: for i,w in product(range(len(p)),[step,-step]): p2 = [a+w*(j==i) for j,a in enumerate(p)] if cal(p2)&lt;cal(p): p = p2 break else: step *= 0.5 return p]]></description>
</item><item>
    <title>数学模板：排列组合</title>
    <link>https://huozhixue.github.io/template-math_comb/</link>
    <pubDate>Mon, 03 Apr 2023 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/template-math_comb/</guid>
    <description><![CDATA[下一个排列 1 2 3 4 5 6 7 8 9 10 11 12 13 def nxt(A): n = len(A) i = n-2 while i &gt;= 0 and A[i] &gt;= A[i+1]: i -= 1 if i &lt; 0: return [] j = n-1 while A[j] &lt;= A[i]: j -= 1 A[i], A[j] = A[j], A[i] A[i+1:] = A[i+1:][::-1] return A]]></description>
</item><item>
    <title>数学模板：线性代数</title>
    <link>https://huozhixue.github.io/template-math_algebra/</link>
    <pubDate>Sun, 02 Apr 2023 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/template-math_algebra/</guid>
    <description><![CDATA[矩阵快速幂 1 2 3 4 5 6 7 8 9 10 mod = 10**9+7 def mul(A,B): return [[sum(a*b for a,b in zip(r,c))%mod for c in zip(*B)] for r in A] def mpow(g,n,f): res = f while n: res = mul(g,res) if n&amp;1 else res g = mul(g,g) n &gt;&gt;= 1 return res 可复用 1 2 3 4 5 6 7 8 9 10 11]]></description>
</item><item>
    <title>数学模板：数论</title>
    <link>https://huozhixue.github.io/template-math_number/</link>
    <pubDate>Sat, 01 Apr 2023 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/template-math_number/</guid>
    <description><![CDATA[1 质因数分解 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 M = f = [0]*2+[1]*(M-2) for i in range(2,isqrt(M)+1): if f[i]: f[i*i:M:i] = [0]*((M-1-i*i)//i+1) primes = [i for i in range(M) if f[i]] @cache def factor(x): ct = defaultdict(int) for p in primes: if p*p&gt;x: break while x%p==0: x//=p ct[p] += 1 if x&gt;1: ct[x]]]></description>
</item><item>
    <title>图模板：网络流</title>
    <link>https://huozhixue.github.io/template-graph_flow/</link>
    <pubDate>Mon, 06 Mar 2023 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/template-graph_flow/</guid>
    <description><![CDATA[1 最大流 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 class Dinic: def __init__(self,): self.g = defaultdict(list) # g 是图中每个]]></description>
</item></channel>
</rss>
