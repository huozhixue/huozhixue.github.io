<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>所有文章 - 个人博客</title>
        <link>https://huozhixue.github.io/posts/</link>
        <description>所有文章 | 个人博客</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 01 Jan 2025 00:00:00 &#43;0800</lastBuildDate><atom:link href="https://huozhixue.github.io/posts/" rel="self" type="application/rss+xml" /><item>
    <title>算法模板</title>
    <link>https://huozhixue.github.io/template/</link>
    <pubDate>Wed, 01 Jan 2025 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/template/</guid>
    <description><![CDATA[1 字符串 字符串匹配：kmp、mancher、z函数、滚动哈希 最小表示法 字典树 AC自动机 后缀数组 2 常用数据结构 常用数据结构：位运算、链表、栈、]]></description>
</item><item>
    <title>dp模板：dp 优化</title>
    <link>https://huozhixue.github.io/template-dp_opt/</link>
    <pubDate>Wed, 03 May 2023 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/template-dp_opt/</guid>
    <description><![CDATA[wqs 二分 斜率优化 四边形不等式优化 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 g = [0]+[inf]*n Q = deque([[0,1,n]]) for j in range(1,n+1): while Q and Q[0][2]&lt;j: Q.popleft() g[j] = w(Q[0][0],j) while Q and w(j,Q[-1][1])&lt;w(Q[-1][0],Q[-1][1]): Q.pop() if not Q: Q.append([j,j+1,n]) else: a = bisect_left(range(Q[-1][2]+1),True,j,key=lambda a:w(j,a)&lt;w(Q[-1][0],a)) Q[-1][2] = a-1 if a&lt;=n: Q.append([j,a,n]) return]]></description>
</item><item>
    <title>dp模板：插头 dp</title>
    <link>https://huozhixue.github.io/template-dp_plug/</link>
    <pubDate>Tue, 02 May 2023 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/template-dp_plug/</guid>
    <description><![CDATA[插头 dp]]></description>
</item><item>
    <title>dp模板：数位 dp</title>
    <link>https://huozhixue.github.io/template-dp_number/</link>
    <pubDate>Mon, 01 May 2023 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/template-dp_number/</guid>
    <description><![CDATA[数位 dp 1 2 3 4 5 6 7 8 9 10 11 @cache def dfs(i,st,bd): if i==len(s): return st res = 0 cur = int(s[i]) up = cur if bd else 9 for x in range(up+1): res += dfs(i+1,st+(x==1),bd and x==cur) return res s = str(n)]]></description>
</item><item>
    <title>数学模板：计算几何</title>
    <link>https://huozhixue.github.io/template-math_geom/</link>
    <pubDate>Wed, 05 Apr 2023 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/template-math_geom/</guid>
    <description><![CDATA[1 圆 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 def in_circle(x,y,r,x1,y1): # 点 (x1,y1) 是否在园内 return (x1-x)*(x1-x)+(y1-y)*(y1-y)&lt;=r*r def cross_v(x,y,r,x1,y1,y2): # 线段 (x1,y1)-(x1,y2) 是否与圆（内）相交 if y&lt;y1: return in_circle(x,y,r,x1,y1) if y&gt;y2: return in_circle(x,y,r,x1,y2) return abs(x1-x)&lt;=r def cross_h(x,y,r,x1,y1,x2): # 线段 (x1,y1)-(x2,y1) 是否与圆（内）相交]]></description>
</item><item>
    <title>数学模板：随机化</title>
    <link>https://huozhixue.github.io/template-math_rand/</link>
    <pubDate>Tue, 04 Apr 2023 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/template-math_rand/</guid>
    <description><![CDATA[爬山法 1 2 3 4 5 6 7 8 9 10 11 def climb(p,cal): eps, step = 1e-7, 1 while step &gt; eps: for i,w in product(range(len(p)),[step,-step]): p2 = [a+w*(j==i) for j,a in enumerate(p)] if cal(p2)&lt;cal(p): p = p2 break else: step *= 0.5 return p]]></description>
</item><item>
    <title>数学模板：排列组合</title>
    <link>https://huozhixue.github.io/template-math_comb/</link>
    <pubDate>Mon, 03 Apr 2023 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/template-math_comb/</guid>
    <description><![CDATA[下一个排列 1 2 3 4 5 6 7 8 9 10 11 12 13 def nxt(A): n = len(A) i = n-2 while i &gt;= 0 and A[i] &gt;= A[i+1]: i -= 1 if i &lt; 0: return [] j = n-1 while A[j] &lt;= A[i]: j -= 1 A[i], A[j] = A[j], A[i] A[i+1:] = A[i+1:][::-1] return A]]></description>
</item><item>
    <title>数学模板：线性代数</title>
    <link>https://huozhixue.github.io/template-math_algebra/</link>
    <pubDate>Sun, 02 Apr 2023 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/template-math_algebra/</guid>
    <description><![CDATA[矩阵快速幂 1 2 3 4 5 6 7 8 9 10 11 12 13 14 mod = 10**9+7 def mul(A,B): return [[sum(a*b for a,b in zip(r,c))%mod for c in zip(*B)] for r in A] def mpow(mat, n): res = mat for i in range(n.bit_length()-2,-1,-1): res = mul(res,res) if n&gt;&gt;i&amp;1: res = mul(res,mat) return res f = [[],[]] A = [[],[]] f = mul(mpow(A,n),f) 快速变]]></description>
</item><item>
    <title>数学模板：数论</title>
    <link>https://huozhixue.github.io/template-math_number/</link>
    <pubDate>Sat, 01 Apr 2023 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/template-math_number/</guid>
    <description><![CDATA[1 质因数分解 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 M = f = [0]*2+[1]*(M-2) for i in range(2,isqrt(M)+1): if f[i]: f[i*i:M:i] = [0]*((M-1-i*i)//i+1) primes = [i for i in range(M) if f[i]] @cache def factor(x): ct = defaultdict(int) for p in primes: while x%p==0: x//=p ct[p] += 1 if x&gt;1: ct[x] += 1 return ct 2]]></description>
</item><item>
    <title>图模板：网络流</title>
    <link>https://huozhixue.github.io/template-graph_flow/</link>
    <pubDate>Mon, 06 Mar 2023 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huozhixue.github.io/template-graph_flow/</guid>
    <description><![CDATA[1 最大流 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 class Dinic: def __init__(self,): self.g = defaultdict(list) # g 是图中每个 u 对应的 v 列表 self.h =]]></description>
</item></channel>
</rss>
